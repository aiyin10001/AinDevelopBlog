<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Android on 演示站点</title>
        <link>http://localhost:1313/categories/android/</link>
        <description>Recent content in Android on 演示站点</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>zh-cn</language>
        <copyright>艾因</copyright>
        <lastBuildDate>Thu, 23 Oct 2025 15:42:32 +0800</lastBuildDate><atom:link href="http://localhost:1313/categories/android/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>Android App 启动流程</title>
        <link>http://localhost:1313/p/android-app-%E5%90%AF%E5%8A%A8%E6%B5%81%E7%A8%8B/</link>
        <pubDate>Thu, 23 Oct 2025 15:42:32 +0800</pubDate>
        
        <guid>http://localhost:1313/p/android-app-%E5%90%AF%E5%8A%A8%E6%B5%81%E7%A8%8B/</guid>
        <description>&lt;h1 id=&#34;android-app启动完整流程详解&#34;&gt;Android App启动完整流程详解
&lt;/h1&gt;&lt;h2 id=&#34;1-系统层启动流程&#34;&gt;1. 系统层启动流程
&lt;/h2&gt;&lt;h3 id=&#34;launcher点击应用图标&#34;&gt;Launcher点击应用图标
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Launcher&lt;/code&gt;进程捕获用户点击事件&lt;/li&gt;
&lt;li&gt;通过&lt;code&gt;PackageManagerService&lt;/code&gt;查询目标应用的&lt;code&gt;AndroidManifest.xml&lt;/code&gt;信息&lt;/li&gt;
&lt;li&gt;获取应用的启动&lt;code&gt;Intent&lt;/code&gt;和组件信息&lt;/li&gt;
&lt;li&gt;调用&lt;code&gt;ActivityManagerService&lt;/code&gt;(AMS)发起启动Activity的请求&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;ams处理启动请求&#34;&gt;AMS处理启动请求
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;ActivityManagerService&lt;/code&gt;接收启动请求&lt;/li&gt;
&lt;li&gt;检查应用权限、用户权限和应用状态&lt;/li&gt;
&lt;li&gt;通过&lt;code&gt;ProcessManager&lt;/code&gt;判断是否需要创建新进程&lt;/li&gt;
&lt;li&gt;如果需要新进程，则通过&lt;code&gt;Zygote&lt;/code&gt;进程孵化新的应用进程&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Zygote&lt;/code&gt;通过fork机制创建新的应用进程，并初始化基本运行环境&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;2-应用进程初始化&#34;&gt;2. 应用进程初始化
&lt;/h2&gt;&lt;h3 id=&#34;application启动&#34;&gt;Application启动
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;创建&lt;code&gt;Application&lt;/code&gt;对象实例&lt;/li&gt;
&lt;li&gt;调用&lt;code&gt;Application.onCreate()&lt;/code&gt;方法&lt;/li&gt;
&lt;li&gt;在此阶段可以初始化全局配置、第三方SDK、数据库等&lt;/li&gt;
&lt;li&gt;执行&lt;code&gt;ContentProvider&lt;/code&gt;的初始化（如果有声明）&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;主线程准备&#34;&gt;主线程准备
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;创建主线程的&lt;code&gt;Looper&lt;/code&gt;对象&lt;/li&gt;
&lt;li&gt;初始化&lt;code&gt;Handler&lt;/code&gt;消息机制&lt;/li&gt;
&lt;li&gt;准备主线程的消息循环队列&lt;/li&gt;
&lt;li&gt;确保UI线程可以处理各种系统事件和用户交互&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;3-activity启动流程&#34;&gt;3. Activity启动流程
&lt;/h2&gt;&lt;h3 id=&#34;activity创建阶段&#34;&gt;Activity创建阶段
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;通过&lt;code&gt;Instrumentation&lt;/code&gt;创建&lt;code&gt;Activity&lt;/code&gt;实例&lt;/li&gt;
&lt;li&gt;调用&lt;code&gt;Activity.onCreate()&lt;/code&gt;方法&lt;/li&gt;
&lt;li&gt;执行&lt;code&gt;setContentView()&lt;/code&gt;加载布局文件&lt;/li&gt;
&lt;li&gt;初始化UI组件和数据绑定&lt;/li&gt;
&lt;li&gt;调用相关Fragment的创建和添加逻辑&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;生命周期回调&#34;&gt;生命周期回调
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Activity.onStart()&lt;/code&gt;: Activity变为可见状态&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Activity.onResume()&lt;/code&gt;: Activity获得焦点，可以接收用户交互&lt;/li&gt;
&lt;li&gt;此时Activity进入运行状态，显示在前台&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;4-界面显示阶段&#34;&gt;4. 界面显示阶段
&lt;/h2&gt;&lt;h3 id=&#34;视图渲染过程&#34;&gt;视图渲染过程
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;构建&lt;code&gt;View&lt;/code&gt;树结构&lt;/li&gt;
&lt;li&gt;执行&lt;code&gt;View&lt;/code&gt;的测量(measure)、布局(layout)、绘制(draw)三大流程&lt;/li&gt;
&lt;li&gt;通过&lt;code&gt;SurfaceFlinger&lt;/code&gt;服务进行界面合成&lt;/li&gt;
&lt;li&gt;利用GPU加速渲染界面内容&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;用户交互就绪&#34;&gt;用户交互就绪
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;注册触摸事件监听器&lt;/li&gt;
&lt;li&gt;建立完整的事件分发机制&lt;/li&gt;
&lt;li&gt;应用进入正常运行状态，可以响应各种用户操作&lt;/li&gt;
&lt;li&gt;系统开始处理各种输入事件和后台任务&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        
    </channel>
</rss>
